/* START */

// Scene sizes
var WIDTH							= window.innerWidth,
	HEIGHT							= window.innerHeight;

// Camera settings
var ASPECT							= WIDTH / HEIGHT,
	VIEW_ANGLE						= 45,
	NEAR							= 0.1,
	FAR								= 1000;

// Global rendering variables
var renderer, camera, scene;
var objects							= [];

// Initialise stuff
function init() {
	// Rendering settings
	renderer							= new THREE.WebGLRenderer();
	camera								= new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);
	scene								= new THREE.Scene();

	// Add camera to the scene
	scene.add(camera);
	camera.position.z					= 5;

	// Set renderer size
	renderer.setSize(WIDTH, HEIGHT);

	// Add the DOM element generated by the renderer to the html body
	document.body.appendChild(renderer.domElement);

	initLights();
	initObjects();
}

function initLights() {
	// Point light
	var pointLight						= new THREE.PointLight(0xffffff);
	pointLight.position.x				= 10;
	pointLight.position.y				= 50;
	pointLight.position.z				= 100;
	scene.add(pointLight);
}

function initObjects() {
	// Sky dome
	var radius							= 100,
		hSegments						= 64,
		vSegments						= 16;
	var vertexShader					= document.getElementById('vertexShader').textContent,
		fragmentShader					= document.getElementById('fragmentShader').textContent;
	var uniforms						= {
		topColor	: {type: "c", value: new THREE.Color( 0x0077ff )},
		bottomColor	: {type: "c", value: new THREE.Color( 0xffffff )},
		offset		: {type: "f", value: 33},
		exponent	: {type: "f", value: 0.6}
	};
	var geometry						= new THREE.SphereGeometry(radius, hSegments, vSegments);
	var material						= new THREE.ShaderMaterial({vertexShader: vertexShader, fragmentShader: fragmentShader, uniforms: uniforms, side: THREE.BackSide});
	objects['skyDome']					= new THREE.Mesh(geometry, material);
	scene.add(objects['skyDome']);

	// Paddle
	var geometry						= new THREE.CubeGeometry(0.1, 1, 1);
	var material						= new THREE.MeshLambertMaterial({color: 0x00ff00});
	objects['paddle']					= new THREE.Mesh(geometry, material);
//	scene.add(objects['paddle']);

	// Ball
	var radius							= 0.05,
		hSegments						= 16,
		vSegments						= 16;
	var geometry						= new THREE.SphereGeometry(radius, hSegments, vSegments);
	var material						= new THREE.MeshPhongMaterial({color: 0xffaa55, specular: 0x888888, shininess: 200});
	objects['ball']						= new THREE.Mesh(geometry, material);
	objects['ball'].position.x			= 1;
	scene.add(objects['ball']);
}

// Animation
function animate() {
	requestAnimationFrame(animate);
	objects['paddle'].rotation.x		+= 0.01;
	objects['paddle'].rotation.y		+= 0.02;
	render();
}

// Rendering
function render() {
	renderer.render(scene, camera);
}

init();
animate();

/* END */